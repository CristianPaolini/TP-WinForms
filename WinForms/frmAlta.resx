<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="epError.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAPY6AQD2OgEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAQAAAAEAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAABAAAAAQAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAA
        AB0AAABaAAAAWgAAAB0AAAAAAAAAAQAAAAEAAAAAAAAAHQAAAFoAAABaAAAAHQAAAAAAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAQAAAAAAAAAVgAAAP8AAAD/AAAAVgAAAAAAAAAEAAAABAAAAAAAAABWAAAA/wAAAP8AAABWAAAAAAAA
        AAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABAAAAAAAAABUAAAA/wAAAP8AAABUAAAAAAAAAAQAAAAEAAAAAAAAAFQAAAD/AAAA/wAA
        AFQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAABAAAAAQAAAAAAAAAFAAAAAAAAAFYAAAD/AAAA/wAAAFYAAAAAAAAABQAAAAUAAAAAAAAAVgAA
        AP8AAAD/AAAAVgAAAAAAAAAFAAAAAAAAAAEAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAVQAAAP8AAAD/AAAAVQAAAAAAAAAEAAAABAAA
        AAAAAABVAAAA/wAAAP8AAABVAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAAQAAAAEwAAAAsAAAAAAAAAFAAAAAMAAABhAAAA/wAAAP8AAABhAAAAAgAA
        ABUAAAAVAAAAAgAAAGEAAAD/AAAA/wAAAGEAAAADAAAAFAAAAAAAAAALAAAAEwAAABAAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAAAAAAAEAAAANoAAAD/AAAAmQAAAAIAAADhAAAA8QAAAPEAAAD8AAAA/AAA
        APAAAADpAAAA6gAAAOoAAADpAAAA8AAAAPwAAAD8AAAA8QAAAPEAAADhAAAAAgAAAJkAAAD/AAAA2gAA
        ABAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAARAAAA6gAAAP8AAACkAAAAAgAAAPEAAAD/AAAA/gAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA/wAAAPEAAAACAAAApAAA
        AP8AAADqAAAAEQAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAABEAAADpAAAA/wAAAKMAAAACAAAA7wAA
        AP8AAADgAAAApAAAAKsAAACpAAAAqAAAAKgAAACoAAAAqAAAAKkAAACrAAAApAAAAOAAAAD/AAAA7wAA
        AAIAAACjAAAA/wAAAOkAAAARAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAEQAAAOoAAAD/AAAApAAA
        AAIAAADtAAAA/wAAAKgAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAqAAA
        AP8AAADtAAAAAgAAAKQAAAD/AAAA6gAAABEAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAARAAAA6gAA
        AP8AAACkAAAAAgAAAO0AAAD/AAAAqQAAAAAAAAAHAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAABwAA
        AAAAAACpAAAA/wAAAO0AAAACAAAApAAAAP8AAADqAAAAEQAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAA
        ABEAAADqAAAA/wAAAKQAAAACAAAA7QAAAP8AAACoAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADAAAAAAAAAKgAAAD/AAAA7QAAAAIAAACkAAAA/wAAAOoAAAARAAAAAAAAAAEAAAAAAAAAAAAA
        AAEAAAAAAAAAEQAAAOoAAAD/AAAApAAAAAIAAADtAAAA/wAAAKgAAAAAAAAAAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAMAAAAAAAAAqAAAAP8AAADtAAAAAgAAAKQAAAD/AAAA6gAAABEAAAAAAAAAAQAA
        AAAAAAAAAAAAAQAAAAAAAAARAAAA6gAAAP8AAACkAAAAAgAAAO0AAAD/AAAAqAAAAAAAAAADAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAACoAAAA/wAAAO0AAAACAAAApAAAAP8AAADqAAAAEQAA
        AAAAAAABAAAAAAAAAAAAAAABAAAAAAAAABEAAADnAAAA/wAAAKEAAAACAAAA7QAAAP8AAACoAAAAAAAA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAKgAAAD/AAAA7QAAAAIAAAChAAAA/wAA
        AOcAAAARAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAEQAAAOoAAAD/AAAApAAAAAIAAADtAAAA/wAA
        AKgAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAqAAAAP8AAADtAAAAAgAA
        AKQAAAD/AAAA6gAAABEAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAAMAAAAnAAAALgAAABrAAAABwAA
        AOwAAAD/AAAAqQAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAACpAAAA/wAA
        AOwAAAAHAAAAawAAALgAAACcAAAADAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAAAAAAKAAAA4QAAAP8AAAC6AAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAA
        ALoAAAD/AAAA4AAAAAoAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAMAAAAEAAAABAAAAAAAAADAAAAA/wAAAOkAAAAVAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAAAAAAVAAAA6QAAAP8AAADAAAAAAAAAAAQAAAAEAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAHcAAAD/AAAA/wAAAH8AAAAAAAAABgAAAAMAAAABAAAAAQAA
        AAMAAAAGAAAAAAAAAH8AAAD/AAAA/wAAAHcAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAFwAAAOgAAAD/AAAA/AAAAFoAAAAAAAAAAgAA
        AAAAAAAAAAAAAgAAAAAAAABaAAAA/AAAAP8AAADoAAAAFwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAWAAAAP8AAAD9AAAA/gAA
        AKIAAAA5AAAAFQAAABUAAAA5AAAAogAAAP4AAAD9AAAA/wAAAFgAAAAAAAAAAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAfAAAA8QAA
        AP8AAAD9AAAA/wAAAP4AAADuAAAA7gAAAP4AAAD/AAAA/QAAAP8AAADxAAAAHwAAAAAAAAACAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAgAA
        AL8AAAD/AAAA+gAAAOUAAAD9AAAA/wAAAP8AAAD/AAAA/wAAAP0AAADlAAAA+gAAAP8AAADAAAAAAgAA
        AAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        AAAAAACIAAAA/wAAAP8AAADBAAAABwAAAEAAAACEAAAAogAAAKIAAACFAAAAQgAAAAcAAAC+AAAA/wAA
        AP8AAACIAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAMAAAAAAAAAVAAAAP8AAAD/AAAA6wAAACIAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAA
        ACEAAADpAAAA/wAAAP8AAABUAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAADDAAAA/wAAAP8AAABRAAAAAAAAAAQAAAADAAAABAAAAAQAAAAEAAAABAAA
        AAMAAAAEAAAAAAAAAFAAAAD/AAAA/wAAAMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAA4AAAC+AAAAkAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAJAAAAC/AAAADgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAHAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAgAAAAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAgAAAAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/0JC////////QkL//0JC//9CQv+gQkIF/0JC/6AAAAWgAAAFoAAABaAA
        AAWgE8gFoBAIBaAQCAWgE8gFoBPIBaATyAWgE8gFoBPIBfoRiF+hClCF4QgQh/kEIJ/8gAE/+oABX/gA
        AB/5AACf8gmQT/IQCE/6KlRP/Qfgv/oX6F8=
</value>
  </data>
</root>